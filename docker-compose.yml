version: "3"

services:

  visualizer:
    image: manomarks/visualizer:latest
    volumes: /var/run/docker.sock:/var/run/docker.sock
    environment:
      - HOST=localhost
    deploy:
      placement:
        constraints: [node.role == manager]


  elasticsearch:
    image: ypereirareis/elasticsearch-head:1.7.5
    command:
      - -Des.http.cors.enabled=true
      - -Des.cluster.name=robotic
      - -Des.index.number_of_shards=5
      - -Des.index.number_of_replicas=0
      - -Des.discovery.zen.ping.unicast.hosts=elasticsearch
      - -Des.node.master=true
      - -Des.node.data=true
      - -Des.iscovery.zen.minimum_master_nodes=1
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.network.publish_host=elasticsearch
    networks:
      - events-network
    deploy:
      placement:
        constraints: [node.role == manager]

  elasticsearch-data:
    image: ypereirareis/elasticsearch-head:1.7.5
    command:
      - -Des.http.cors.enabled=true
      - -Des.cluster.name=robotic
      - -Des.index.number_of_shards=5
      - -Des.index.number_of_replicas=0
      - -Des.discovery.zen.ping.unicast.hosts=elasticsearch
      - -Des.node.master=false
      - -Des.node.data=true
      - -Des.iscovery.zen.minimum_master_nodes=1
      - -Des.discovery.zen.ping.multicast.enabled=false
      - -Des.network.publish_host=$${HOSTNAME}
    networks:
      - events-network
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]

  postgres:
    image: vitalcode/events-postgres
    volumes:
      - postgres-data:/var/lib/postgresql/data/pgdata
    networks:
      - events-network
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=development
      - POSTGRES_USER=user
      - POSTGRES_DB=events
      - EVENTS_APP_USER=${EVENTS_APP_USER}
      - EVENTS_APP_PASSWORD=${EVENTS_APP_PASSWORD}
    deploy:
      labels:
        [uk.vitalcode.events.role=database]
      placement:
        constraints: [node.role == manager]

  events-api:
    image: vitalcode/events-api
    environment:
      - PSQL_URL=jdbc:postgresql://postgres/events
      - PSQL_USER=user
      - PSQL_PASSWORD=development
      - ES_URL=elasticsearch://elasticsearch:9300
      - ES_INDEX=lisenok
      - ES_TYPE=events
      - ES_CLUSTER=robotic
    depends_on:
      - elasticsearch
      - elasticsearch-data
      - postgres
    networks:
      - events-network
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]

  graphiql:
    image: vitalcode/auth-graphiql
    depends_on:
      - events-api
    networks:
      - events-network
    deploy:
      mode: global
      placement:
        constraints: [node.role == worker]

networks:
  events-network:

volumes:
  postgres-data: